//AuthController.java



package com.example.controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import com.example.utils.DBConnection;

public class AuthController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        if ("login".equals(action)) {
            loginUser(request, response);
        } else if ("register".equals(action)) {
            registerUser(request, response);
        }
    }

    private void loginUser(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String username = request.getParameter("username");
        String password = request.getParameter("password");

        try (Connection connection = DBConnection.getConnection()) {
            String sql = "SELECT * FROM users WHERE username=? AND password=?";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, username);
                statement.setString(2, password);
                try (ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        HttpSession session = request.getSession(true);
                        session.setAttribute("username", username);
                        response.sendRedirect("symptomChecker.jsp");
                    } else {
                        request.setAttribute("error", "Invalid username or password");
                        request.getRequestDispatcher("login.jsp").forward(request, response);
                    }
                }
            }
        } catch (SQLException e) {
            throw new ServletException("Error in database operation", e);
        }
    }

    private void registerUser(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String username = request.getParameter("username");
        String email = request.getParameter("email");
        String password = request.getParameter("password");

        try (Connection connection = DBConnection.getConnection()) {
            String userCheckQuery = "SELECT * FROM users WHERE username=? OR email=?";
            try (PreparedStatement checkStatement = connection.prepareStatement(userCheckQuery)) {
                checkStatement.setString(1, username);
                checkStatement.setString(2, email);
                try (ResultSet checkResult = checkStatement.executeQuery()) {
                    if (checkResult.next()) {
                        request.setAttribute("error", "Username or Email already exists");
                        request.getRequestDispatcher("register.jsp").forward(request, response);
                    } else {
                        String sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
                        try (PreparedStatement statement = connection.prepareStatement(sql)) {
                            statement.setString(1, username);
                            statement.setString(2, email);
                            statement.setString(3, password);
                            statement.executeUpdate();
                        }
                        HttpSession session = request.getSession(true);
                        session.setAttribute("username", username);
                        response.sendRedirect("index.jsp");
                    }
                }
            }
        } catch (SQLException e) {
            throw new ServletException("Error in database operation", e);
        }
    }
}




//SymptomSearchServlet.java



package com.example.controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import com.example.utils.DBConnection;

public class SymptomSearchServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        HttpSession session = request.getSession(false);
        if (session == null || session.getAttribute("username") == null) {
            response.sendRedirect("login.jsp");
            return;
        }

        String symptoms = request.getParameter("symptoms");

        try (Connection connection = DBConnection.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement("SELECT medicines, diseases FROM symptoms WHERE name=?")) {
            preparedStatement.setString(1, symptoms);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                String medicines = null;
                String diseases = null;

                if (resultSet.next()) {
                    medicines = resultSet.getString("medicines");
                    diseases = resultSet.getString("diseases");
                }

                request.setAttribute("medicines", medicines);
                request.setAttribute("diseases", diseases);
                request.setAttribute("symptoms", symptoms);
                request.getRequestDispatcher("symptomChecker.jsp").forward(request, response);
            }
        } catch (SQLException e) {
            throw new ServletException("Error in database operation", e);
        }
    }
}


//DBConnection.java
package com.example.utils;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DBConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/app";
    private static final String USER = "root";
    private static final String PASSWORD = ""; // Consider using a more secure method to store passwords.

    // Static initializer block to load the MySQL JDBC driver
    static {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            throw new RuntimeException("Failed to load MySQL JDBC driver", e);
        }
    }

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }

    public static void close(Connection connection) {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public static void closeResource(AutoCloseable resource) {
        if (resource != null) {
            try {
                resource.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public static void deregisterDriver() {
        try {
            DriverManager.deregisterDriver(DriverManager.getDriver(URL));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


//Symptom.java

package com.example.model;

public class Symptom {
    private int id;
    private String name;
    private String medicines;
    private String diseases;

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getMedicines() {
        return medicines;
    }

    public void setMedicines(String medicines) {
        this.medicines = medicines;
    }

    public String getDiseases() {
        return diseases;
    }

    public void setDiseases(String diseases) {
        this.diseases = diseases;
    }
}



//User.java


package com.example.model;

public class User {
    private int id;
    private String username;
    private String email;
    private String password;

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}


//web.xml

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    
    <!-- Mapping for AuthController servlet -->
    <servlet>
        <servlet-name>AuthController</servlet-name>
        <servlet-class>com.example.controller.AuthController</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AuthController</servlet-name>
        <url-pattern>/auth</url-pattern>
    </servlet-mapping>
    
    <!-- Mapping for SymptomSearchServlet servlet -->
    <servlet>
        <servlet-name>SymptomSearchServlet</servlet-name>
        <servlet-class>com.example.controller.SymptomSearchServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>SymptomSearchServlet</servlet-name>
        <url-pattern>/symptomsearch</url-pattern>
    </servlet-mapping>
    
</web-app>

